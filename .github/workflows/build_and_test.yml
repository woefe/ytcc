name: Build and test

on:
  push:
    branches: [master]
  pull_request:

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y gettext ffmpeg
        sudo ln -s /bin/true /bin/mpv
    - name: Install dependencies on Windows
      if: matrix.os == 'windows-latest'
      run: |
        choco install ffmpeg -y --limit-output --no-progress
        "package main; func main() { }" | Out-File mpv.go
        go build mpv.go
        Copy-Item mpv.exe C:\ProgramData\chocolatey\bin\mpv.exe
    - name: Install dependencies on MacOS
      if: matrix.os == 'macos-latest'
      run: |
        brew install ffmpeg gettext mpv
    - name: Setup ytcc and Python dependencies
      run: |
        python setup.py install
        python -m pip install --upgrade pip
        pip install -r devrequirements.txt
    - name: Type check with MyPy
      run: |
        mypy ytcc
    - name: Check docstyle with pydocstyle
      run: |
        pydocstyle ytcc
    - name: Linting with pylint
      run: |
        pylint --recursive=y ytcc scripts
    - name: Run tests with pytest
      run: |
        python -m pytest -m "not flaky" -v
    - name: Run flaky tests
      run: |
        python -m pytest -m flaky -v
      continue-on-error: true
  shellcheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install shellcheck
      run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck
    - name: Check scripts with shellcheck
      run: shellcheck scripts/*.sh
